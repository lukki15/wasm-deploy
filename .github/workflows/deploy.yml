name: Deploy WASM-4

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  WASI_VERSION: 22
  WASI_SDK_PATH: ./wasi-sdk-22.0

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download WASI SDK
        run: wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${{ env.WASI_VERSION }}/wasi-sdk-${{ env.WASI_VERSION }}.0-linux.tar.gz
      - name: unzip WASI SDK
        run: tar xvf wasi-sdk-${{ env.WASI_VERSION }}.0-linux.tar.gz
      
      - name: install wasm-opt
        run: sudo apt-get install -y binaryen

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: build
        run: make

      - name: install wasm4
        run: npm install -g wasm4
      - name: create folders
        run: mkdir -p bin dist
      - name: bundle website and executables
        run: >
         w4 bundle build/cart.wasm --title "${{ github.event.repository.name }}"
         --html dist/index.html
         --windows bin/${{ github.event.repository.name }}-windows.exe
         --mac bin/${{ github.event.repository.name }}-mac
         --linux bin/${{ github.event.repository.name }}-linux

  upload:
    name: Upload Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
      
      - name: Upload executables artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executables-bundle
          path: bin/*

  deploy:
    name: Deploy Page
    needs: upload
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
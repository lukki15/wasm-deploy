name: Deploy WASM-4

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "./" # default value when not using subfolders
  WASI_VERSION: 22
  WASI_SDK_PATH: ./wasi-sdk-22.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: get WASI SDK
        run: wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${{ env.WASI_VERSION }}/wasi-sdk-${{ env.WASI_VERSION }}.0-linux.tar.gz && tar xvf wasi-sdk-${{ env.WASI_VERSION }}.0-linux.tar.gz
      - run: make

      - name: wasm-opt
        uses: NiklasEi/wasm-opt-action@v2
        with:
          file: build/cart.wasm
          output: cart-opt.wasm
          options: -Oz --strip-dwarf --strip-producers --zero-filled-memory

      - name: install wasm4
        run: npm install -g wasm4
      - name: bundle website
        run: >
         mkdir -p dist bin &&
         w4 bundle cart-opt.wasm --title "${{ github.event.repository.name }}"
         --html dist/index.html
         --windows bin/${{ github.event.repository.name }}-windows.exe
         --mac bin/${{ github.event.repository.name }}-mac
         --linux bin/${{ github.event.repository.name }}-linux
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  
  release:
    needs: build
    runs-on: ubuntu-latest
    name: Release
    steps:
    - name: Release executables
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bin/${{ github.event.repository.name }}-windows.exe
          bin/${{ github.event.repository.name }}-mac
          bin/${{ github.event.repository.name }}-linux
